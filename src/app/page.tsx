'use client';

import * as React from 'react';
import Image from 'next/image';
import {
  ArrowRight,
  Calendar as CalendarIcon,
  CheckCircle2,
  Clock,
  Plane,
  BedDouble,
  Search,
} from 'lucide-react';

import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Calendar } from '@/components/ui/calendar';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Input } from '@/components/ui/input';
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from '@/components/ui/select';
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
  DialogFooter,
} from '@/components/ui/dialog';
import Header from '@/components/header';
import Footer from '@/components/footer';
import { Label } from '@/components/ui/label';
import { useToast } from '@/hooks/use-toast';
import {PlaceHolderImages} from '@/lib/placeholder-images';

const timeSlots = [
  '09:00 AM',
  '10:00 AM',
  '11:00 AM',
  '02:00 PM',
  '03:00 PM',
  '04:00 PM',
];

function HeroSection() {
  const heroImage = PlaceHolderImages.find(p => p.id === 'hero-students');
  return (
    <section className="relative pt-16 md:pt-24 lg:pt-32">
      <div className="container mx-auto px-4">
        <div className="grid md:grid-cols-2 gap-12 items-center">
          <div className="space-y-6 text-center md:text-left">
            <h1 className="text-4xl lg:text-5xl xl:text-6xl font-headline font-bold tracking-tighter">
              Navigate Your Global Future with VisaPilot
            </h1>
            <p className="text-lg text-muted-foreground">
              From seamless appointment scheduling with visa experts to integrated travel booking, we're your co-pilot for a successful journey abroad.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center md:justify-start">
              <Button size="lg">
                Book a Consultation <ArrowRight className="ml-2" />
              </Button>
              <Button size="lg" variant="outline">
                Explore Travel
              </Button>
            </div>
          </div>
          <div className="relative h-64 md:h-auto md:w-full aspect-video rounded-xl overflow-hidden shadow-2xl">
            {heroImage && (
              <Image
                src={heroImage.imageUrl}
                alt={heroImage.description}
                fill
                className="object-cover"
                data-ai-hint={heroImage.imageHint}
                priority
              />
            )}
          </div>
        </div>
      </div>
    </section>
  );
}

function FeaturesSection() {
    const features = [
    {
      icon: <CalendarIcon className="w-8 h-8 text-primary" />,
      title: 'Instant Appointments',
      description: 'Book consultations with visa experts instantly. No accounts, no hassle.',
    },
    {
      icon: <Plane className="w-8 h-8 text-primary" />,
      title: 'Integrated Travel Booking',
      description: 'Search for flights and accommodations directly on our platform.',
    },
    {
      icon: <CheckCircle2 className="w-8 h-8 text-primary" />,
      title: 'AI Document Checklist',
      description: 'Receive a personalized document checklist generated by our intelligent tool.',
    },
  ];

  return (
    <section id="features" className="py-20 lg:py-28">
      <div className="container mx-auto px-4">
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-headline font-bold">Why Choose VisaPilot?</h2>
          <p className="text-lg text-muted-foreground mt-2 max-w-2xl mx-auto">
            We streamline the entire process of studying abroad, from expert advice to travel arrangements.
          </p>
        </div>
        <div className="grid md:grid-cols-3 gap-8">
          {features.map((feature, index) => (
            <Card key={index} className="text-center shadow-lg hover:shadow-xl transition-shadow duration-300">
              <CardHeader className="items-center">
                <div className="p-4 bg-primary/10 rounded-full">{feature.icon}</div>
                <CardTitle className="font-headline mt-4">{feature.title}</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-muted-foreground">{feature.description}</p>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>
    </section>
  );
}

function AppointmentSection() {
  const [date, setDate] = React.useState<Date | undefined>(new Date());
  const [selectedTime, setSelectedTime] = React.useState<string | null>(null);
  const [isModalOpen, setIsModalOpen] = React.useState(false);
  const { toast } = useToast();

  const handleTimeSelect = (time: string) => {
    setSelectedTime(time);
    setIsModalOpen(true);
  };
  
  const handleBookingSubmit = (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    setIsModalOpen(false);
    toast({
      title: "Consultation Booked!",
      description: `Your appointment is confirmed for ${date?.toLocaleDateString()} at ${selectedTime}. A confirmation email has been sent.`,
      variant: 'default'
    });
    setSelectedTime(null);
  };

  return (
    <section id="appointments" className="py-20 lg:py-28 bg-card">
      <div className="container mx-auto px-4">
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-headline font-bold">Book Your Consultation</h2>
          <p className="text-lg text-muted-foreground mt-2 max-w-2xl mx-auto">
            Select a date and time that works for you. Our experts are ready to help.
          </p>
        </div>
        <div className="grid md:grid-cols-2 gap-8 lg:gap-12 items-start">
          <Card className="shadow-lg">
            <CardContent className="p-4 md:p-6 flex justify-center">
              <Calendar
                mode="single"
                selected={date}
                onSelect={setDate}
                className="rounded-md"
                disabled={(day) => day < new Date(new Date().setDate(new Date().getDate() - 1))}
              />
            </CardContent>
          </Card>
          <div className="space-y-4">
             <h3 className="font-headline font-semibold text-xl text-center md:text-left">
                Available Slots for {date ? date.toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) : '...'}
            </h3>
            <div className="grid grid-cols-2 sm:grid-cols-3 gap-4">
              {timeSlots.map((time) => (
                <Button
                  key={time}
                  variant="outline"
                  onClick={() => handleTimeSelect(time)}
                  className="py-6 text-base"
                >
                  <Clock className="mr-2 h-4 w-4" />
                  {time}
                </Button>
              ))}
            </div>
          </div>
        </div>
      </div>
      <Dialog open={isModalOpen} onOpenChange={setIsModalOpen}>
        <DialogContent className="sm:max-w-[425px]">
          <DialogHeader>
            <DialogTitle className="font-headline">Confirm Your Booking</DialogTitle>
            <DialogDescription>
              You're booking a consultation for {date?.toLocaleDateString()} at {selectedTime}.
            </DialogDescription>
          </DialogHeader>
          <form onSubmit={handleBookingSubmit}>
            <div className="grid gap-4 py-4">
              <div className="grid grid-cols-4 items-center gap-4">
                <Label htmlFor="name" className="text-right">
                  Name
                </Label>
                <Input id="name" required className="col-span-3" placeholder="Jane Doe" />
              </div>
              <div className="grid grid-cols-4 items-center gap-4">
                <Label htmlFor="email" className="text-right">
                  Email
                </Label>
                <Input id="email" type="email" required className="col-span-3" placeholder="jane.doe@example.com" />
              </div>
            </div>
            <DialogFooter>
              <Button type="submit" className="w-full">Confirm Booking</Button>
            </DialogFooter>
          </form>
        </DialogContent>
      </Dialog>
    </section>
  );
}

function TravelSection() {
  const { toast } = useToast();
  const handleTravelSearch = (e: React.FormEvent, type: 'Flights' | 'Accommodations') => {
    e.preventDefault();
    toast({
      title: 'Search initiated!',
      description: `Searching for ${type}... (This is a demo feature)`,
    })
  }

  return (
    <section id="travel" className="py-20 lg:py-28">
      <div className="container mx-auto px-4">
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-headline font-bold">Plan Your Travel</h2>
          <p className="text-lg text-muted-foreground mt-2 max-w-2xl mx-auto">
            Find the best deals on flights and accommodations without leaving our site.
          </p>
        </div>
        <Tabs defaultValue="flights" className="max-w-3xl mx-auto">
          <TabsList className="grid w-full grid-cols-2">
            <TabsTrigger value="flights">
              <Plane className="mr-2 h-4 w-4" /> Flights
            </TabsTrigger>
            <TabsTrigger value="accommodations">
              <BedDouble className="mr-2 h-4 w-4" /> Accommodations
            </TabsTrigger>
          </TabsList>
          <TabsContent value="flights">
            <Card className="shadow-lg">
              <CardContent className="p-6 space-y-4">
                <form onSubmit={(e) => handleTravelSearch(e, 'Flights')}>
                  <div className="grid md:grid-cols-2 gap-4">
                    <Input placeholder="From" />
                    <Input placeholder="To" />
                  </div>
                  <div className="grid md:grid-cols-3 gap-4 mt-4">
                    <Input type="date" placeholder="Departure" />
                    <Input type="date" placeholder="Return (Optional)" />
                    <Select>
                      <SelectTrigger>
                        <SelectValue placeholder="Passengers" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="1">1 Passenger</SelectItem>
                        <SelectItem value="2">2 Passengers</SelectItem>
                        <SelectItem value="3">3 Passengers</SelectItem>
                        <SelectItem value="4">4+ Passengers</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                  <Button type="submit" className="w-full mt-6">
                    <Search className="mr-2 h-4 w-4" /> Search Flights
                  </Button>
                </form>
              </CardContent>
            </Card>
          </TabsContent>
          <TabsContent value="accommodations">
            <Card className="shadow-lg">
              <CardContent className="p-6 space-y-4">
                <form onSubmit={(e) => handleTravelSearch(e, 'Accommodations')}>
                  <Input placeholder="Destination, city, or hotel" />
                  <div className="grid md:grid-cols-2 gap-4 mt-4">
                    <Input type="date" placeholder="Check-in" />
                    <Input type="date" placeholder="Check-out" />
                  </div>
                  <div className="mt-4">
                    <Select>
                      <SelectTrigger>
                        <SelectValue placeholder="Guests & Rooms" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="1g1r">1 Guest, 1 Room</SelectItem>
                        <SelectItem value="2g1r">2 Guests, 1 Room</SelectItem>
                        <SelectItem value="2g2r">2 Guests, 2 Rooms</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                  <Button type="submit" className="w-full mt-6">
                    <Search className="mr-2 h-4 w-4" /> Search Accommodations
                  </Button>
                </form>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </section>
  );
}

export default function Home() {
  return (
    <div className="flex flex-col min-h-screen bg-background">
      <Header />
      <main className="flex-grow">
        <HeroSection />
        <FeaturesSection />
        <AppointmentSection />
        <TravelSection />
      </main>
      <Footer />
    </div>
  );
}